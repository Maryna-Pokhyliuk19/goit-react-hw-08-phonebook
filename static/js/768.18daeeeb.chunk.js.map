{"version":3,"file":"static/js/768.18daeeeb.chunk.js","mappings":"yNACA,EAA+B,mCAA/B,EAAiF,mCAAjF,EAAqI,qC,SCIxHA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IACrBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAkBP,EAASG,QAAO,SAAAK,GAAO,OAC7CA,EAAQC,KAAKC,cAAcC,SAASR,EAAOO,cADE,IAG/C,OACE,eAAIE,UAAWC,EAAf,SACGN,EAAgBO,KAAI,gBAAGC,EAAH,EAAGA,GAAIN,EAAP,EAAOA,KAAMO,EAAb,EAAaA,OAAb,OACnB,gBAAIJ,UAAWC,EAAf,WACE,yBACGJ,EADH,KACWO,MAEX,mBACEJ,UAAWC,EACXI,KAAK,SACLC,QAAS,kBAAMb,GAASc,EAAAA,EAAAA,IAAcJ,GAA7B,EAHX,sBAJoCA,EADnB,KAgB1B,E,SC9BD,EAA8B,4BAA9B,EAAwE,4BCI3DK,EAAS,WACpB,IAAMjB,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IACrBC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,mBAAOM,UAAWC,EAAlB,sCAEE,kBACED,UAAWC,EACXI,KAAK,OACLI,MAAOlB,EACPmB,SAXW,SAAAC,GACflB,GAASmB,EAAAA,EAAAA,IAAcD,EAAEE,cAAcJ,MAAMK,QAC9C,MAaF,E,SCvBD,EAAuB,mBAAvB,EAAkD,oBAAlD,EAA8E,oBAA9E,EAA2G,qBCKrGC,EAAgB,CAAElB,KAAM,GAAIO,OAAQ,IAE7BY,EAAe,WAC1B,IAAM5B,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBG,GAAWC,EAAAA,EAAAA,MAejB,OACE,SAAC,KAAD,CAAQqB,cAAeA,EAAeE,SAdd,SAAC,EAAD,GAAsC,IAAnCpB,EAAkC,EAAlCA,KAAMO,EAA4B,EAA5BA,OAAYc,EAAgB,EAAhBA,UACvCC,EAAiBtB,EAAKC,cACtBsB,EAAWhC,EAASiC,MACxB,SAAAzB,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBqB,CAAnC,IAET,GAAIC,EACF,OAAOE,MAAM,GAAD,OAAIzB,EAAJ,4BAEd,IAAMD,EAAU,CAAEC,KAAAA,EAAMO,OAAAA,GACxBX,GAAS8B,EAAAA,EAAAA,IAAW3B,IACpBsB,GACD,EAGC,UACE,UAAC,KAAD,CAAMlB,UAAWC,EAAjB,WACE,mBAAOD,UAAWC,EAAlB,kBAEE,SAAC,KAAD,CACED,UAAWC,EACXI,KAAK,OACLR,KAAK,OACL2B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAO1B,UAAWC,EAAlB,oBAEE,SAAC,KAAD,CACED,UAAWC,EACXI,KAAK,MACLR,KAAK,SACL2B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQ1B,UAAWC,EAAYI,KAAK,SAApC,6BAMP,E,SChDYsB,EAAW,WACtB,IAAMlC,GAAWC,EAAAA,EAAAA,MACXkC,GAAYvC,EAAAA,EAAAA,IAAYwC,EAAAA,IACxBC,GAAQzC,EAAAA,EAAAA,IAAY0C,EAAAA,IAK1B,OAHAC,EAAAA,EAAAA,YAAU,WACRvC,GAASwC,EAAAA,EAAAA,MACV,GAAE,CAACxC,KAEF,4BACE,uCACA,SAACuB,EAAD,KACA,qCACCY,IAAcE,IAAS,mDACxB,iCACE,SAACtB,EAAD,KACA,SAACrB,EAAD,SAIP,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__ZQI1L\",\"contactsItem\":\"ContactsList_contactsItem__b2nHv\",\"contactsButton\":\"ContactsList_contactsButton__VdMSp\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport css from './ContactsList.module.css';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    <ul className={css.contactsList}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li className={css.contactsItem} key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className={css.contactsButton}\n            type=\"submit\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"labelFilter\":\"Filter_labelFilter__7SBy1\",\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/filterSlice';\nimport { getFilter } from 'redux/selectors';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onFilter = e => {\n    dispatch(filterContact(e.currentTarget.value.trim()));\n  };\n\n  return (\n    <label className={css.labelFilter}>\n      Find contact by the name\n      <input\n        className={css.inputFilter}\n        type=\"text\"\n        value={filter}\n        onChange={onFilter}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"label\":\"Form_label__8nx+5\",\"input\":\"Form_input__FTtTw\",\"button\":\"Form_button__8NOIT\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport css from './Form.module.css';\nimport { addContact } from 'redux/operations';\nimport { getContacts } from 'redux/selectors';\n\nconst initialValues = { name: '', number: '' };\n\nexport const ContactsForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const formSubmitHandler = ({ name, number }, { resetForm }) => {\n    const normalizedName = name.toLowerCase();\n    const findName = contacts.some(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n    if (findName) {\n      return alert(`${name} is already in contacts`);\n    }\n    const contact = { name, number };\n    dispatch(addContact(contact));\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={formSubmitHandler}>\n      <Form className={css.form}>\n        <label className={css.label}>\n          Name\n          <Field\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Number\n          <Field\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={css.button} type=\"submit\">\n          Add contact\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n","import { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactsForm } from 'components/Form/Form';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { getError, getIsLoading } from 'redux/selectors';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactsForm />\n      <h2>Contacts</h2>\n      {isLoading && !error && <b>Request in progress...</b>}\n      <>\n        <Filter />\n        <ContactsList />\n      </>\n    </div>\n  );\n};\n"],"names":["ContactsList","contacts","useSelector","getContacts","filter","getFilter","dispatch","useDispatch","visibleContacts","contact","name","toLowerCase","includes","className","css","map","id","number","type","onClick","deleteContact","Filter","value","onChange","e","filterContact","currentTarget","trim","initialValues","ContactsForm","onSubmit","resetForm","normalizedName","findName","some","alert","addContact","pattern","title","required","Contacts","isLoading","getIsLoading","error","getError","useEffect","fetchContacts"],"sourceRoot":""}